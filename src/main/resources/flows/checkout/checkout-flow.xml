<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd">

	<var name="order" class="com.bootshop.model.CustomerOrder" />

	<action-state id="addCartToOrder">
		<evaluate expression="cartServiceImpl.validate(requestParameters.cartid)"
			result="order.cart" />
		<transition to="invalidCartWarning" on-exception="java.io.IOException" />
		<transition to="addCart" />
	</action-state>

	<action-state id="addCart">
		<evaluate expression="cartServiceImpl.addCart(order.cart)" />
		<transition to="lookupCustomer" />
	</action-state>

	<action-state id="lookupCustomer">
		<evaluate result="order.customer" expression="orderFlowAction.lookupCustomer()" />
		<transition to="registerForm"
			on-exception="com.bootshop.flow.CustomerNotFoundException" />
		<transition to="collectShippingInfo" />
	</action-state>

	<view-state id="registerForm" model="order" popup="true">
		<transition on="submit" to="addCustomer" />
		<transition on="cancel" to="endState" />
	</view-state>

	<action-state id="addCustomer">
		<evaluate result="order.customer" expression="customerServiceImpl.addCustomer(order.customer,order.cart)" />
		<transition to="collectShippingInfo" />
	</action-state>

	<view-state id="collectShippingInfo" view="collectShippingInfo"
		model="order">
		<transition on="shippingInfoCollected" to="updateShippingInfo" />
	</view-state>
	
	<action-state id="updateShippingInfo">
		<evaluate result="order.shippingAddress" expression="shippingAddressServiceImpl.addAddress(order.customer.shippingAddress)" />
		<transition to="orderConfirmation" />
	</action-state>
	
	<view-state id="orderConfirmation">
		<transition on="submit" to="saveOrder" />
		<transition on="cancel" to="cancel" />
	</view-state>

	<action-state id="saveOrder">
		<evaluate expression="customerOrderServiceImpl.addCustomerOrder(order)" />
		<transition to="thankYou" />
	</action-state>

	<view-state id="thankYou">
		<transition to="endState" />
	</view-state>

	<view-state id="invalidCartWarning">
		<transition to="endState" />
	</view-state>


	<!-- End state -->
	<end-state id="endState" />

</flow>
